{{- $adminPassword := include "lemmy.adminpassword" . -}}
{{- $pictrsApikey := include "lemmy.pictrsapikey" . -}}
{{- $pictrsConfig := dict
  "url" (printf "http://%s:%d" (include "lemmy.pictrsname" .) (int .Values.pictrs.service.port))
  "api_key" (.Values.pictrs.apikey | default $pictrsApikey)
  "image_mode" (.Values.config.imageMode | default (ternary "StoreLinkPreviews" "None" (.Values.config.cacheExternalLinkPreviews | default true)))
}}
{{- if semverCompare "<0.19" (.Values.backend.image.tag | default .Values.image.tag | default .Chart.AppVersion) }}
{{-   $_ := unset $pictrsConfig "cache_external_link_previews" }}
{{- end }}
{{- $config := dict
  "database"
    (dict
      "uri" (printf "postgresql://%s:%s@%s:%d/%s?sslmode=%s"
         (include "lemmy.postgresql.username" .)
         (include "lemmy.postgresql.password" .)
         (include "lemmy.postgresql.host" .)
         (include "lemmy.postgresql.port" . | int)
         (include "lemmy.postgresql.database" .)
         (.Values.postgresql.sslmode | default "prefer")
      )
      "pool_size" (.Values.postgresql.poolSize | default 10)
    )
  "pictrs" $pictrsConfig
  "email"
    (dict
      "smtp_server" .Values.smtp.server
      "smtp_login" .Values.smtp.username
      "smtp_password" .Values.smtp.password
      "smtp_from_address" .Values.smtp.from
      "tls_type" .Values.smtp.tls
    )
  "setup"
    (dict
      "admin_username" (.Values.admin.username | default "lemmy")
      "admin_password" (.Values.admin.password | default $adminPassword)
      "admin_email" .Values.admin.email
      "site_name" .Values.config.siteName
    )
  "hostname" .Values.serverName
  "bind" "0.0.0.0"
  "port" 8536
  "tls_enabled" (.Values.config.tls | default true)
-}}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "lemmy.fullname" . }}
  labels:
    {{- include "lemmy.labels" . | nindent 4 }}
    app.kubernetes.io/component: backend
data:
{{- if not .Values.admin.existingSecret }}
  admin_password: {{ $adminPassword | b64enc }}
{{- end }}
{{- if not .Values.pictrs.existingSecret }}
  pictrs_apikey: {{ $pictrsApikey | b64enc }}
{{- end }}
  config.hjson: {{ $config | merge (.Values.extraConfig | default dict) | toPrettyJson | b64enc }}
